class Solution {
    public void reverseString(char[] s) {
        reverseString(s, 0, s.length - 1);
    }

    private void reverseString(char[] s, int start, int end) {
        if (start >= end) return;

        char tmp = s[start];
        s[start] = s[end];
        s[end] = tmp;

        reverseString(s, start + 1, end - 1);
    }
}


class Solution {
    public boolean isPalindrome(String s) {
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (Character.isLetterOrDigit(s.charAt(i))) {
                count++;
            }
        }
        char[] cleaned = new char[count];
        int idx = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (Character.isLetterOrDigit(c)) {
                cleaned[idx++] = Character.toLowerCase(c);
            }
        }
        for (int i = 0, j = cleaned.length - 1; i < j; i++, j--) {
            if (cleaned[i] != cleaned[j]) {
                return false;
            }
        }
        return true;
    }
}


